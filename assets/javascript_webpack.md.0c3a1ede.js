import{o as s,c as n,e as a}from"./app.db18cb00.js";const e='{"title":"webpack","description":"","frontmatter":{"title":"webpack"},"headers":[{"level":3,"title":"Getting Started","slug":"getting-started"},{"level":2,"title":"Config","slug":"config"},{"level":3,"title":"mode","slug":"mode"},{"level":3,"title":"entry","slug":"entry"},{"level":3,"title":"output","slug":"output"},{"level":3,"title":"loader","slug":"loader"},{"level":3,"title":"plugins","slug":"plugins"},{"level":3,"title":"devServer","slug":"devserver"},{"level":2,"title":"Official Loader","slug":"official-loader"},{"level":3,"title":"style-loader","slug":"style-loader"},{"level":3,"title":"css-loader","slug":"css-loader"},{"level":3,"title":"postcss-loader","slug":"postcss-loader"},{"level":3,"title":"less-loader","slug":"less-loader"},{"level":3,"title":"url-loader","slug":"url-loader"},{"level":3,"title":"file-loader","slug":"file-loader"},{"level":3,"title":"eslint-loader","slug":"eslint-loader"},{"level":2,"title":"Official plugin","slug":"official-plugin"},{"level":3,"title":"html-webpack-plugin","slug":"html-webpack-plugin"},{"level":3,"title":"mini-css-extract-plugin","slug":"mini-css-extract-plugin"},{"level":3,"title":"optimize-css-assets-webpack-plugin","slug":"optimize-css-assets-webpack-plugin"}],"relativePath":"javascript/webpack.md","lastUpdated":1614331254299}',p={},t=a('<h3 id="getting-started"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h3><p>无需配置，<code>webpack</code> 能直接处理 js/json，支持 ES module</p><div class="language-bash"><pre><code>webpack src/entry.js -o dits/bundle.js --mode<span class="token operator">=</span>development\n</code></pre></div><p><code>webpack</code> 默认读取工作目录下的 <code>webpack.config.js</code> 文件</p><h2 id="config"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><h3 id="mode"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;production&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="entry"><a class="header-anchor" href="#entry" aria-hidden="true">#</a> entry</h3><p>单文件入口</p><div class="language-js 单文件入口"><pre><code><span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>多文件入口</p><h3 id="output"><a class="header-anchor" href="#output" aria-hidden="true">#</a> output</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;js/bundle.js&#39;</span><span class="token punctuation">,</span>\n    path<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="loader"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> loader</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 配置形式一</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;less-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 配置形式二</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpe?g|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          limit<span class="token operator">:</span> <span class="token number">4096</span><span class="token punctuation">,</span>\n          outputPath<span class="token operator">:</span> <span class="token string">&#39;imgs&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>写在后面的 loader 先执行，并将执行结果交由前一个 loader 处理</p></div><h3 id="plugins"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="devserver"><a class="header-anchor" href="#devserver" aria-hidden="true">#</a> devServer</h3><p>执行 <code>npx webpack-dev-server</code>，编译打包结果保存在内存，不输出文件，watch 文件变化后自动编译</p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  <span class="token comment">/* 打包输出目录 */</span>\n  conentBase<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n  <span class="token comment">/* 启用 gizp */</span>\n  compress<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  port<span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>\n\n\n  <span class="token comment">/* 在浏览器中打开 */</span>\n  open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><h2 id="official-loader"><a class="header-anchor" href="#official-loader" aria-hidden="true">#</a> Official Loader</h2><h3 id="style-loader"><a class="header-anchor" href="#style-loader" aria-hidden="true">#</a> style-loader</h3><h3 id="css-loader"><a class="header-anchor" href="#css-loader" aria-hidden="true">#</a> css-loader</h3><h3 id="postcss-loader"><a class="header-anchor" href="#postcss-loader" aria-hidden="true">#</a> postcss-loader</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">/* 固定写法 */</span>\n      ident<span class="token operator">:</span> <span class="token string">&#39;postcss&#39;</span><span class="token punctuation">,</span>\n      <span class="token function">plugins</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n          <span class="token comment">/**\n           * 该插件用于解析(package.json) browserslist 的配置\n           * 以构建兼容到指定浏览器的 css\n           */</span>\n          <span class="token function">required</span><span class="token punctuation">(</span><span class="token string">&#39;postcss-preset-env&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>package.json</code> 中的配置</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;browserslist&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;development&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&quot;last 1 chrome version&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;last 1 firefox version&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;last 1 safari version&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;production&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&quot;&gt;2%&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;not dead&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;not op_mini all&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>postcss-preset-env</code> 依赖 <code>process.<wbr>env.NODE_ENV</code> 读取 <code>browserslist</code> 对应的配置，应确保该值正确设置</p></div><h3 id="less-loader"><a class="header-anchor" href="#less-loader" aria-hidden="true">#</a> less-loader</h3><h3 id="url-loader"><a class="header-anchor" href="#url-loader" aria-hidden="true">#</a> url-loader</h3><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(jpe?g|png|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* 转 base64 的上限 */</span>\n    limit<span class="token operator">:</span> <span class="token number">4096</span><span class="token punctuation">,</span>\n\n    <span class="token comment">/* 使用 es module 解析 */</span>\n    esModule<span class="token operator">:</span> <span class="token boolean">true</span>，\n\n    name<span class="token operator">:</span> <span class="token string">&#39;[hash:10].[ext]&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="file-loader"><a class="header-anchor" href="#file-loader" aria-hidden="true">#</a> file-loader</h3><p>和 <code>url-loader</code> 类似，但是不会转 <code>base64</code></p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(css|less|scss|js|json|jpe?g|png|gif|)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;file-loader&#39;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;[hash:10].[ext]&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="eslint-loader"><a class="header-anchor" href="#eslint-loader" aria-hidden="true">#</a> eslint-loader</h3><p>安装 <code>eslint</code> <code>eslint-plugin-import</code></p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;eslint-loader&#39;</span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* 自动修复错误 */</span>\n    fix<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><p>安装 <code>eslint-config-airbnb-base</code> 并在 <code>package.json</code> 中配置</p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;eslintConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;airbnb-base&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>常用的行内规则</p><div class="language-js"><pre><code><span class="token comment">// eslint-disable-next-line</span>\n\n<span class="token comment">/* global jQuery */</span>\n</code></pre></div><h2 id="official-plugin"><a class="header-anchor" href="#official-plugin" aria-hidden="true">#</a> Official plugin</h2><h3 id="html-webpack-plugin"><a class="header-anchor" href="#html-webpack-plugin" aria-hidden="true">#</a> html-webpack-plugin</h3><p><code>new HtmlWebpackPlugin()</code> 会自动创建 <code>index.html</code> 文件</p><div class="language-js"><pre><code><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 指定 html 模版</span>\n  template<span class="token operator">:</span> <span class="token string">&#39;public/index.html&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="mini-css-extract-plugin"><a class="header-anchor" href="#mini-css-extract-plugin" aria-hidden="true">#</a> mini-css-extract-plugin</h3><p>配合其内置的 loader ，可以提取 css 为外置连接引入</p><div class="language-js"><pre><code><span class="token comment">// 设置 css loader</span>\n<span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 添加 plugin</span>\n<span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filename<span class="token operator">:</span> <span class="token string">&#39;css/app.css&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="optimize-css-assets-webpack-plugin"><a class="header-anchor" href="#optimize-css-assets-webpack-plugin" aria-hidden="true">#</a> optimize-css-assets-webpack-plugin</h3><p>用于压缩 css 文件</p><div class="language-js"><pre><code><span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>注：</p><p>行文中的 <code>resolve</code> 函数是 <code>path.resolve</code></p>',54);p.render=function(a,e,p,o,c,l){return s(),n("div",null,[t])};export default p;export{e as __pageData};
