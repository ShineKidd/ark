import{o as n,c as s,d as a}from"./app.e1a4a42a.js";const t='{"title":"排序","description":"","frontmatter":{},"headers":[{"level":2,"title":"排序","slug":"排序"},{"level":3,"title":"冒泡","slug":"冒泡"},{"level":3,"title":"快排","slug":"快排"},{"level":2,"title":"字符串","slug":"字符串"},{"level":3,"title":"给定两个字符串，找出它们之间最大相同子串","slug":"给定两个字符串，找出它们之间最大相同子串"}],"relativePath":"algorithm/practice.md","lastUpdated":1617672299133}',p={},e=a('<h2 id="排序"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><h3 id="冒泡"><a class="header-anchor" href="#冒泡" aria-hidden="true">#</a> 冒泡</h3><h3 id="快排"><a class="header-anchor" href="#快排" aria-hidden="true">#</a> 快排</h3><h2 id="字符串"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><h3 id="给定两个字符串，找出它们之间最大相同子串"><a class="header-anchor" href="#给定两个字符串，找出它们之间最大相同子串" aria-hidden="true">#</a> 给定两个字符串，找出它们之间最大相同子串</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">getMaxSubStr</span> <span class="token punctuation">(</span><span class="token parameter">str1<span class="token punctuation">,</span> str2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> maxStr<span class="token punctuation">,</span> subStr\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>str1 <span class="token operator">&gt;</span> str2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    maxStr <span class="token operator">=</span> str1\n    subStr <span class="token operator">=</span> str2\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    maxStr <span class="token operator">=</span> str2\n    subStr <span class="token operator">=</span> str1\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">let</span> subStrLen <span class="token operator">=</span> subStr<span class="token punctuation">.</span>length\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> subStrLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 移动头尾指针</span>\n    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> end <span class="token operator">=</span> subStrLen <span class="token operator">-</span> i\n    <span class="token keyword">while</span><span class="token punctuation">(</span>end <span class="token operator">&lt;=</span> subStrLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> currStr <span class="token operator">=</span> subStr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>maxStr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>currStr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> currStr\n      <span class="token punctuation">}</span>\n      start<span class="token operator">++</span>\n      end<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMaxSubStr</span><span class="token punctuation">(</span><span class="token string">&#39;abcdabce&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dab&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div>',6);p.render=function(a,t,p,o,c,r){return n(),s("div",null,[e])};export default p;export{t as __pageData};
