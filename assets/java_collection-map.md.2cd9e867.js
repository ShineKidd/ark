import{o as e,c as a,d as l}from"./app.a7255a47.js";const r='{"title":"java 集合","description":"","frontmatter":{"title":"java 集合"},"headers":[{"level":2,"title":"Collection","slug":"collection"},{"level":3,"title":"List","slug":"list"},{"level":3,"title":"ArrayList","slug":"arraylist"},{"level":3,"title":"LinkedList","slug":"linkedlist"},{"level":3,"title":"Vector","slug":"vector"},{"level":3,"title":"Set","slug":"set"},{"level":2,"title":"Map","slug":"map"},{"level":3,"title":"HashMap","slug":"hashmap"},{"level":3,"title":"LinkedHashMap","slug":"linkedhashmap"},{"level":3,"title":"TreeMap","slug":"treemap"},{"level":3,"title":"Hashtable","slug":"hashtable"},{"level":3,"title":"Properties","slug":"properties"}],"relativePath":"java/collection-map.md","lastUpdated":1615042962941}',t={},d=l('<p>数组和集合都是对多个数据进行存储操作的结构，简称 java 容器</p><p>数组特点</p><ol><li>一旦初始化后，其长度就确定了，不可变</li><li>一旦定义好，其元素类型就确定，（多态性 Object[]）</li><li>提供对方法很有限，添加、删除、插入不方便，效率不高</li><li>存储的元素有序、可重复</li></ol><p><code>Arrays.asList()</code> 数组 ==&gt; 集合</p><h2 id="collection"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> Collection</h2><p>单列数据，元素有序、可重复（动态数组）</p><h3 id="list"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List</h3><p><code>add()</code> <code>addAll()</code> <code>size()</code> <code>isEmpty</code> <code>clear()</code> <code>remove()</code> <code>removeAll()</code> <code>contains()</code> <code>containsAll()</code> <code>retainAll()</code> <code>equals()</code><code>hasCode()</code> <code>toArray()</code> <code>iterator()</code></p><p>💡 <code>contains()</code> <code>remove()</code> 调用元素的 <code>equals()</code> 方法进行比较</p><h3 id="arraylist"><a class="header-anchor" href="#arraylist" aria-hidden="true">#</a> ArrayList</h3><h3 id="linkedlist"><a class="header-anchor" href="#linkedlist" aria-hidden="true">#</a> LinkedList</h3><h3 id="vector"><a class="header-anchor" href="#vector" aria-hidden="true">#</a> Vector</h3><h3 id="set"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h3><p>元素无序、不可重复</p><h2 id="map"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><p>双列数据 y = f(x)</p><h3 id="hashmap"><a class="header-anchor" href="#hashmap" aria-hidden="true">#</a> HashMap</h3><h3 id="linkedhashmap"><a class="header-anchor" href="#linkedhashmap" aria-hidden="true">#</a> LinkedHashMap</h3><h3 id="treemap"><a class="header-anchor" href="#treemap" aria-hidden="true">#</a> TreeMap</h3><h3 id="hashtable"><a class="header-anchor" href="#hashtable" aria-hidden="true">#</a> Hashtable</h3><h3 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3>',21);t.render=function(l,r,t,i,h,s){return e(),a("div",null,[d])};export default t;export{r as __pageData};
