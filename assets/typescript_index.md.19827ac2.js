import{_ as n,c as s,o as a,b as t}from"./app.b8b8de1c.js";const f='{"title":"TypeScript \u57FA\u7840","description":"","frontmatter":{"title":"TypeScript \u57FA\u7840"},"headers":[{"level":2,"title":"\u5E38\u89C1\u9519\u8BEF","slug":"\u5E38\u89C1\u9519\u8BEF"}],"relativePath":"typescript/index.md","lastUpdated":1637245399088}',p={},o=t(`<h2 id="\u5E38\u89C1\u9519\u8BEF" tabindex="-1">\u5E38\u89C1\u9519\u8BEF <a class="header-anchor" href="#\u5E38\u89C1\u9519\u8BEF" aria-hidden="true">#</a></h2><ul><li>TS2456 \u8303\u578B\u5FAA\u73AF\u5F15\u7528\u81EA\u8EAB</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token comment">// TS2456</span>
</code></pre></div><ul><li>TS2554 \u51FD\u6570\u5F62\u53C2\u4E0E\u5B9E\u53C2\u4E2A\u6570\u4E0D\u5339\u914D</li></ul><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">f</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TS2554</span>
</code></pre></div><ul><li>TS2794 Promise resolve \u53C2\u6570\u7F3A\u5931</li></ul><div class="language-ts"><pre><code><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TS2794 \u53EF new Promise&lt;void&gt; \u89E3\u51B3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>TS1169 interface \u4E2D\u4F7F\u7528\u975E\u5B57\u9762\u91CF\u6216\u8005\u975E\u552F\u4E00\u7684 symbol \u7C7B\u578B</li></ul><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>k <span class="token keyword">in</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// TS1169</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>TS2345 \u4F20\u53C2\u65F6\uFF0C\u7C7B\u578B\u4E0D\u517C\u5BB9</li></ul><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">f</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> TypeEnum<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span>EnumA<span class="token punctuation">.</span><span class="token constant">XXX</span><span class="token punctuation">)</span> <span class="token comment">// TS2345</span>
</code></pre></div><ul><li><p>TS2589 \u8303\u578B\u5B9E\u4F8B\u5316\u5D4C\u5957\u8FC7\u6DF1</p></li><li><p>TS2322 \u53D8\u91CF\u8D4B\u503C\u64CD\u4F5C\uFF0C\u7C7B\u578B\u4E0D\u517C\u5BB9</p></li></ul><div class="language-ts"><pre><code><span class="token keyword">const</span> s<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// TS2322</span>
</code></pre></div><ul><li>TS2352 \u7C7B\u578B\u672A\u6B63\u786E\u7F29\u7A84</li></ul><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">f</span> <span class="token punctuation">(</span>s<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TS2352</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5F02\u6B65</span>
<span class="token keyword">let</span> s<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token string">&#39;str&#39;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TS2352</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,15),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{f as __pageData,g as default};
